{"remainingRequest":"/Users/wangzhanyuan/code/my-works/one/node_modules/babel-loader/lib/index.js!/Users/wangzhanyuan/code/my-works/one/src/service/index.js","dependencies":[{"path":"/Users/wangzhanyuan/code/my-works/one/src/service/index.js","mtime":1564627266332},{"path":"/Users/wangzhanyuan/code/my-works/one/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangzhanyuan/code/my-works/one/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/wangzhanyuan/code/my-works/one/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _objectSpread from \"/Users/wangzhanyuan/code/my-works/one/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport Vue from 'vue';\nimport router from '../router';\nimport configUrl from './configUrl'; // 创建一个 axios 实例(接口)\n\nvar ajx = axios.create({\n  // baseURL: 'http://stage.ocheng.me/api/',\n  baseURL: '/api/',\n  timeout: 1000 * 180,\n  withCredentials: true,\n  headers: {\n    Accept: 'application/json',\n    'X-Channel': configUrl.channelId,\n    'X-Channel-Type': 1\n  }\n});\nvar loading = null; // 需要加loading的接口\n\nconsole.log('当前aixos-所引用的configUrl', _objectSpread({}, configUrl));\nconsole.log('当前aixos-所使用的headers', _objectSpread({}, ajx));\najx.interceptors.request.use(function (config) {\n  // /全局加loading,提交时加loading\n  if (config.method == 'post' || config.method == 'put') {\n    if (config.data) {\n      var data = config.data;\n\n      if (data.loading) {\n        loading = Vue.prototype.$loading({\n          lock: true,\n          text: '加载中',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.6)'\n        });\n      }\n    }\n  } // const token = cookieGet('token')\n  // if (token != null || token != undefined) {\n  //   if (cookieGet('Httpheader')) {\n  //     config.headers = JSON.parse(cookieGet('Httpheader'))\n  //   } else {\n  //     config.headers = {\n  //       'Content-Type': 'application/json;charset=UTF-8',\n  //       'X-Channel-Type': '',\n  //       'X-Channel': '',\n  //       'X-Security-Token': token\n  //     }\n  //   }\n  // } else {\n  //   // 除了登录接口不需要带token,其他接口都需要带token,否则跳转到登录页\n  //   if (config.url != '/api/user/signin') {\n  //     router.replace('/login')\n  //   }\n  // }\n\n\n  return config;\n}, function (error) {\n  return _Promise.error(error);\n});\najx.interceptors.response.use(function (res) {\n  if (res) {\n    // 清除loading\n    if (loading) {\n      loading.close();\n      loading = null;\n    }\n\n    return res;\n  }\n\n  return _Promise.reject('接口报错');\n}, function (error) {\n  if (error) {\n    var msg = '接口请求错误';\n\n    if (error.response) {\n      // console.log(error.response)\n      msg = error.response.data.message;\n    }\n\n    Vue.prototype.$notify.error({\n      title: '错误',\n      message: msg\n    }); // setTimeout(function(){\n    //   router.replace('/login')\n    // },1000)\n\n    return _Promise.reject(msg);\n  }\n\n  return null;\n});\nexport function HttpGet(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    ajx.get(url, {\n      params: params\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\nexport function HttpPost(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    ajx.post(url, data).then(function (response) {\n      if (url == 'user/signin') {\n        // /登录,把请求头返回\n        resolve(response);\n      } else {\n        resolve(response.data);\n      }\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\nexport function HttpPatch(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    ajx.patch(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\nexport function HttpPut(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    ajx.put(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\nexport function HttpDelete(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new _Promise(function (resolve, reject) {\n    ajx.delete(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}",{"version":3,"sources":["/Users/wangzhanyuan/code/my-works/one/src/service/index.js"],"names":["axios","Vue","router","configUrl","ajx","create","baseURL","timeout","withCredentials","headers","Accept","channelId","loading","console","log","interceptors","request","use","config","method","data","prototype","$loading","lock","text","spinner","background","error","response","res","close","reject","msg","message","$notify","title","HttpGet","url","params","resolve","get","then","catch","err","HttpPost","post","HttpPatch","patch","HttpPut","put","HttpDelete","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Vue from 'vue'\nimport router from '../router'\nimport configUrl from './configUrl'\n\n// 创建一个 axios 实例(接口)\nconst ajx = axios.create({\n  // baseURL: 'http://stage.ocheng.me/api/',\n  baseURL: '/api/',\n  timeout: 1000 * 180,\n  withCredentials: true,\n  headers: {\n    Accept: 'application/json',\n    'X-Channel': configUrl.channelId,\n    'X-Channel-Type': 1\n  }\n})\n\nlet loading = null\n// 需要加loading的接口\nconsole.log('当前aixos-所引用的configUrl', {\n  ...configUrl\n})\nconsole.log('当前aixos-所使用的headers', {\n  ...ajx\n})\najx.interceptors.request.use(config => {\n  // /全局加loading,提交时加loading\n  if (config.method == 'post' || config.method == 'put') {\n    if (config.data) {\n      const data = config.data\n      if (data.loading) {\n        loading = Vue.prototype.$loading({\n          lock: true,\n          text: '加载中',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.6)'\n        })\n      }\n    }\n  }\n\n  // const token = cookieGet('token')\n  // if (token != null || token != undefined) {\n  //   if (cookieGet('Httpheader')) {\n  //     config.headers = JSON.parse(cookieGet('Httpheader'))\n  //   } else {\n  //     config.headers = {\n  //       'Content-Type': 'application/json;charset=UTF-8',\n  //       'X-Channel-Type': '',\n  //       'X-Channel': '',\n  //       'X-Security-Token': token\n  //     }\n  //   }\n  // } else {\n  //   // 除了登录接口不需要带token,其他接口都需要带token,否则跳转到登录页\n  //   if (config.url != '/api/user/signin') {\n  //     router.replace('/login')\n  //   }\n  // }\n\n  return config\n},\nerror => Promise.error(error)\n)\n\najx.interceptors.response.use(\n  (res) => {\n    if (res) {\n      // 清除loading\n      if (loading) {\n        loading.close()\n        loading = null\n      }\n\n      return res\n    }\n    return Promise.reject('接口报错')\n  },\n  (error) => {\n    if (error) {\n      let msg = '接口请求错误'\n      if (error.response) {\n        // console.log(error.response)\n        msg = error.response.data.message\n      }\n      Vue.prototype.$notify.error({\n        title: '错误',\n        message: msg\n      })\n      // setTimeout(function(){\n      //   router.replace('/login')\n      // },1000)\n\n      return Promise.reject(msg)\n    }\n    return null\n  },\n)\n\nexport function HttpGet(url, params = {}) {\n  return new Promise((resolve, reject) => {\n    ajx.get(url, {\n      params\n    })\n      .then((response) => {\n        resolve(response.data)\n      })\n      .catch((err) => {\n        reject(err)\n      })\n  })\n}\n\nexport function HttpPost(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    ajx.post(url, data)\n      .then((response) => {\n        if (url == 'user/signin') {\n          // /登录,把请求头返回\n          resolve(response)\n        } else {\n          resolve(response.data)\n        }\n      }, (err) => {\n        reject(err)\n      })\n  })\n}\n\nexport function HttpPatch(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    ajx.patch(url, data)\n      .then((response) => {\n        resolve(response.data)\n      }, (err) => {\n        reject(err)\n      })\n  })\n}\n\nexport function HttpPut(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    ajx.put(url, data)\n      .then((response) => {\n        resolve(response.data)\n      }, (err) => {\n        reject(err)\n      })\n  })\n}\nexport function HttpDelete(url, data = {}) {\n  return new Promise((resolve, reject) => {\n    ajx.delete(url, data)\n      .then((response) => {\n        resolve(response.data)\n      }, (err) => {\n        reject(err)\n      })\n  })\n}\n"]}]}